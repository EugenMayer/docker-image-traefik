## see https://docs.traefik.io/reference/static-configuration/file/
<%-
trusted_ips=[]
if env_TRAEFIK_TRUSTEDIPS != ""
  trusted_ips= env_TRAEFIK_TRUSTEDIPS.split(',').to_s
end

dns_resolvers=""
if env_TRAEFIK_ACME_DNS_RESOLVERS != ""
  dns_resolvers= env_TRAEFIK_ACME_DNS_RESOLVERS.split(',').to_s
end

-%>
[global]
  sendAnonymousUsage = <%= env_TRAEFIK_USAGE_ENABLE %>
  checkNewVersion = false

[log]
  level = "<%= env_TRAEFIK_LOG_LEVEL %>"
  filePath = "<%= env_TRAEFIK_LOG_FILE %>"

[accessLog]
  filePath = "<%= env_TRAEFIK_ACCESS_FILE %>"
  bufferingSize = <%= env_TRAEFIK_ACCESS_BUFFERING_SIZE %>

[serversTransport]
  insecureSkipVerify = <%= env_TRAEFIK_INSECURE_SKIP %>
  [serversTransport.forwardingTimeouts]
    dialTimeout = "<%= env_TRAEFIK_TIMEOUT_DIAL %>s"
    responseHeaderTimeout = "<%= env_TRAEFIK_TIMEOUT_HEADER %>s"

[entryPoints]
  [entryPoints.http]
    address = ":<%= env_TRAEFIK_HTTP_PORT %>"
    [entryPoints.http.transport]
      [entryPoints.http.transport.respondingTimeouts]
        readTimeout = "<%= env_TRAEFIK_TIMEOUT_READ %>s"
        writeTimeout = "<%= env_TRAEFIK_TIMEOUT_WRITE %>s"
        idleTimeout = "<%= env_TRAEFIK_TIMEOUT_IDLE %>s"
  <%- if trusted_ips.length > 0 -%>
    [entryPoints.http.proxyProtocol]
      trustedIPs = <%= trusted_ips %>
    [entryPoints.http.forwardedHeaders]
      trustedIPs = <%= trusted_ips %>
  <%- end -%>

#########################  tls endpoint configuration ##########################
<% if %w(true only).include?(env_TRAEFIK_HTTPS_ENABLE) ||  (env_TRAEFIK_ADMIN_ENABLE == "true" && env_TRAEFIK_ADMIN_SSL == "true" ) -%>
  # TLS endpoint
  [entryPoints.https]
    address = ":<%= env_TRAEFIK_HTTPS_PORT %>"
    [entryPoints.https.transport]
      [entryPoints.https.transport.respondingTimeouts]
        readTimeout = "<%= env_TRAEFIK_TIMEOUT_READ %>s"
        writeTimeout = "<%= env_TRAEFIK_TIMEOUT_WRITE %>s"
        idleTimeout = "<%= env_TRAEFIK_TIMEOUT_IDLE %>s"
  <%- if trusted_ips.length > 0 -%>
    [entryPoints.https.proxyProtocol]
      trustedIPs = <%= trusted_ips %>
    [entryPoints.https.forwardedHeaders]
      trustedIPs = <%= trusted_ips %>
  <%- end -%>
<%-end -%>
#########################  /tls endpoint configuration/ ##########################

#########################  admin backend configuration ##########################
[api]
  insecure = false
  <%- if env_TRAEFIK_ADMIN_ENABLE == "true" -%>
  dashboard = true
  <% end -%>
  debug = <%= env_TRAEFIK_DEBUG %>

[ping]
  entryPoint = "http"

# The rest of the configuration for the dashboard can be found under
# /mnt/filestorage/generated-dashboard.toml since it is dynamic ( router )

#########################  /admin backend configuration/ ##########################

#########################  acme ###########################
<%- if %w(true only).include?(env_TRAEFIK_HTTPS_ENABLE) && env_TRAEFIK_ACME_ENABLE == "true" -%>
[certificatesResolvers.default.acme]
  email = "<%= env_TRAEFIK_ACME_EMAIL %>"
  storage =  "<%= env_TRAEFIK_ACME_STORAGE %>"
  caServer = "<%= env_TRAEFIK_ACME_CASERVER %>"
  <%- if env_TRAEFIK_ACME_CHALLENGE == "http" -%>
  # HTTP-01
  [certificatesResolvers.default.acme.httpChallenge]
    entryPoint="http"
  <%- elsif env_TRAEFIK_ACME_CHALLENGE == "dns" -%>
  # DNS-01
  [certificatesResolvers.default.acme.dnsChallenge]
    provider = "<%= env_TRAEFIK_ACME_CHALLENGE_DNS_PROVIDER %>"
    delayBeforeCheck = <%= env_TRAEFIK_ACME_CHALLENGE_DNS_DELAY %>
    <%- if dns_resolvers != "" -%>
    resolvers = <%= dns_resolvers %>
    <%- end -%>
    disablePropagationCheck = <%= env_TRAEFIK_ACME_DISABLE_PROPAGATION_CHECK %>
  <%- end -%>
<%- end -%>
#########################  /acme/ #########################
#########################  rancher fronend/backend defintions  ##########################
[providers]
<%- if env_TRAEFIK_RANCHER_ENABLE == "true" -%>
  [providers.rancher]
    prefix = "<%= env_TRAEFIK_RANCHER_PREFIX%>"
    defaultRule = "<%= env_TRAEFIK_RANCHER_DEFAULT_RULE %>"
    refreshSeconds = <%= env_TRAEFIK_RANCHER_REFRESH %>
    exposedByDefault = <%= env_TRAEFIK_RANCHER_EXPOSED %>
    enableServiceHealthFilter = <%= env_TRAEFIK_RANCHER_HEALTHCHECK %>
    intervalPoll = <%= env_TRAEFIK_RANCHER_INTERVALPOLL%>
    <% if env_TRAEFIK_CONSTRAINTS != "" %>
    constraints = [ <%= env_TRAEFIK_CONSTRAINTS %> ]
    <% end -%>
<%- end -%>
#########################  /rancher fronend/backend defintions / ##########################
#########################  kubernetes fronend/backend defintions ##########################
<%- if env_TRAEFIK_K8S_ENABLE == "true" -%>
  [providers.kubernetes]
    constraints = [ <%= env_TRAEFIK_CONSTRAINTS %> ]
<%- end -%>

#########################  /kubernetes fronend/backend defintions/ ##########################
#########################  file base fronend/backend defintions ##########################
<% if env_TRAEFIK_FILE_ENABLE == "true" || env_TRAEFIK_ADMIN_ENABLE == "true" || env_TRAEFIK_HTTP_COMPRESSION == "true" || %w(true only).include?(env_TRAEFIK_HTTPS_ENABLE) || env_TRAEFIK_HTTPS_COMPRESSION == "true" -%>
  [providers.file]
    directory = "<%= env_TRAEFIK_FILE_FOLDER %>"
    watch = true
<% end -%>
#########################  /file base fronend/backend defintions/ ##########################
#########################  docker based fronend/backend defintions ##########################
<% if env_TRAEFIK_DOCKER_ENABLE == "true" -%>
  [providers.docker]
    endpoint = "<%= env_TRAEFIK_DOCKER_ENDPOINT %>"
    defaultRule = "<%= env_TRAEFIK_DOCKER_DEFAULT_RULE %>"
    exposedByDefault = <%= env_TRAEFIK_DOCKER_EXPOSEDBYDEFAULT %>
    swarmMode = <%= env_TRAEFIK_DOCKER_SWARMMODE %>
    constraints = [ <%= env_TRAEFIK_CONSTRAINTS %> ]
    <%- if env_TRAEFIK_DOCKER_TLS == "true" -%>
    [providers.docker.tls]
      ca = "/mnt/certs/docker.ca.crt"
      cert = "/mnt/certs/docker.crt"
      key = "/mnt/certs/docker.key"
      insecureSkipVerify = "<%= env_TRAEFIK_DOCKER_SKIP_VERIFY %>"
    <%- end -%>
<%- end -%>
#########################  /docker based fronend/backend defintions/ ##########################
#########################  metrics ##########################
<% if env_TRAEFIK_METRICS_ENABLE == "true" %>
[metrics]
  [metrics.statistics]
    RecentErrors = <%= env_TRAEFIK_METRICS_STATISTICS %>
    <% if env_TRAEFIK_METRICS_EXPORTER == "prometheus" %>
    # prometheus metrics
    [metrics.<%= env_TRAEFIK_METRICS_EXPORTER %>]
      entryPoint = "traefik"
      buckets=<%= env_TRAEFIK_METRICS_PROMETHEUS_BUCKETS %>
    <% elsif env_TRAEFIK_METRICS_EXPORTER != "" %>
    # any other metric server
    [metrics.<%= env_TRAEFIK_METRICS_EXPORTER %>]
      address = "<%= env_TRAEFIK_METRICS_ADDRESS %>"
      pushInterval = "<%= env_TRAEFIK_METRICS_PUSH %>s"
    <% end -%>
<% end -%>
#########################  /mentrics/ ##########################
